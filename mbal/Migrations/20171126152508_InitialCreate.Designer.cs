// <auto-generated />
using mbal.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace mbal.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20171126152508_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("mbal.Models.Agency", b =>
                {
                    b.Property<long>("AgencyID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("BanhchCode");

                    b.Property<string>("ConsultantName");

                    b.Property<string>("Name");

                    b.Property<string>("Phonenumber");

                    b.HasKey("AgencyID");

                    b.ToTable("agencies");
                });

            modelBuilder.Entity("mbal.Models.Compensation", b =>
                {
                    b.Property<long>("compensationId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateOfCompensation");

                    b.Property<long>("acceptCompensation");

                    b.Property<DateTime>("compensationDate");

                    b.Property<float>("compensationMoney");

                    b.Property<string>("customerCode");

                    b.Property<long>("insurranceId");

                    b.Property<string>("reason");

                    b.HasKey("compensationId");

                    b.ToTable("compensations");
                });

            modelBuilder.Entity("mbal.Models.Customer", b =>
                {
                    b.Property<long>("CustomerID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<string>("Cmtnd");

                    b.Property<string>("CustomerCode");

                    b.Property<DateTime>("Dob");

                    b.Property<string>("FullName");

                    b.Property<string>("Phonenumber");

                    b.Property<string>("Sex");

                    b.HasKey("CustomerID");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("mbal.Models.Employee", b =>
                {
                    b.Property<long>("EmployeeID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("Dob");

                    b.Property<string>("Email");

                    b.Property<string>("EmployeeNumber");

                    b.Property<string>("Fullname");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("EmployeeID");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("mbal.Models.Insurrance", b =>
                {
                    b.Property<long>("InsurranceID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BanhchCode");

                    b.Property<string>("ContractNumber");

                    b.Property<string>("CoverageRate");

                    b.Property<DateTime>("Create_at");

                    b.Property<string>("Create_by");

                    b.Property<long>("CustomerID");

                    b.Property<int>("DurationOfInsurrance");

                    b.Property<long>("EmployeeID");

                    b.Property<int>("FormOfPayment");

                    b.Property<long>("ProductID");

                    b.Property<string>("StatusContract");

                    b.Property<string>("StatusFee");

                    b.Property<DateTime>("TimeIn");

                    b.Property<DateTime>("TimeOut");

                    b.Property<string>("description");

                    b.HasKey("InsurranceID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("EmployeeID");

                    b.HasIndex("ProductID");

                    b.ToTable("insurrances");
                });

            modelBuilder.Entity("mbal.Models.Payment", b =>
                {
                    b.Property<long>("paymentId")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("amountPayment");

                    b.Property<DateTime>("createAt");

                    b.Property<string>("customerCode");

                    b.Property<long>("insurranceId");

                    b.HasKey("paymentId");

                    b.ToTable("payments");
                });

            modelBuilder.Entity("mbal.Models.Product", b =>
                {
                    b.Property<long>("ProductID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Money");

                    b.Property<int>("PayMethod");

                    b.Property<string>("ProductCode");

                    b.Property<string>("ProductName");

                    b.Property<string>("ProductStatus");

                    b.Property<string>("description");

                    b.HasKey("ProductID");

                    b.ToTable("products");
                });

            modelBuilder.Entity("mbal.Models.User", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("fullname");

                    b.Property<string>("password");

                    b.Property<string>("role");

                    b.Property<string>("username");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("mbal.Models.Insurrance", b =>
                {
                    b.HasOne("mbal.Models.Customer", "Customer")
                        .WithMany("Insurrances")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mbal.Models.Employee", "Employee")
                        .WithMany("Insurrances")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("mbal.Models.Product", "Product")
                        .WithMany("Insurrances")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
